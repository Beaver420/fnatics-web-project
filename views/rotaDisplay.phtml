<?php require("templates/header.phtml"); ?>
<?php require("templates/navbar.phtml"); ?>
<?php require("templates/loginModal.phtml"); ?>

<div class="content-wrapper">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">

                <div class="table-responsive table-scroll-large table-overflow-y table-overflow-x mt-5">
                    <table class="table table-striped table-bordered table-sm">
                        <thead>
                        <tr>
                            <th scope="col">Team</th>
                            <th scope="col">Name</th>
                            <?php for($i = 1; $i < sizeof($view->schedules) + 1; $i++){
                                echo "<th scope=\"col\">$i</th>";
                            } ?>
                        </tr>
                        </thead>
                        <tbody>
                            <?php for ($x = 0; $x < sizeof($view->teams); $x++){ ?>

                                <tr id="<?php echo $view->teams[$x]->getTeamID(); ?>">
                                    <th scope="row"><?php echo $view->teams[$x]->getTeamName(); ?></th>
                                    <td><?php echo $view->members[$x][0] ?></td>
                                    <?php for($i = 1; $i < sizeof($view->schedules) + 1; $i++){
                                        echo "<th scope=\"col\"></th>";
                                    } ?>
                                </tr>

                                <?php $isFirst = true;
                                    for ($j = 0; $j < sizeof($view->members[$x]); $j++) {
                                        if ($isFirst){
                                            $isFirst = false;
                                            continue;
                                        } else {?>
                                            <tr>
                                            <th scope="row"></th>
                                            <td><?php echo $view->members[$x][$j] ?></td>
                                            <?php for($i = 1; $i < sizeof($view->schedules) + 1; $i++){
                                                echo "<th scope=\"col\"></th>";
                                            } ?>
                                            </tr>
                                    <?php }} ?>
                            <?php } ?>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    let schedules = <?php echo json_encode($view->schedules);?>;
    let unavailableDevs = <?php echo json_encode($view->unavailable);?>;
    console.log(unavailableDevs);

    //Date Array
    const dateArray = [];
    schedules.forEach(x => dateArray.push(x._from));


    //Select the rota table.
    const scheduleTableHead = document.querySelectorAll('table thead th');
    const scheduleTableBody = document.querySelectorAll('table tbody tr');

    //console.log(scheduleTableBody[1].children[1+2].setAttribute('class', 'bg-success'));

    //Set the top row of the table to the dates in the array.
    for (let i = 0; i < scheduleTableHead.length; i++){
       const html = scheduleTableHead[i].innerHTML;
       if (html !== 'Team' && html !== 'Name') {
           scheduleTableHead[i].innerHTML = dateArray[i-2];
       }
    }


    // Get the devs who are scheduled to be on support on a given day.
    // Then find the given day in the table and set the cell background to green.
    for (let i = 0; i < schedules.length; i++){
        const devNamesOnSched = schedules.filter(x => x._from === dateArray[i])
            .map(x => [x._devA, x._devB]);

        const [ devA, devB ] = devNamesOnSched[0];

        for (let j = 0; j < scheduleTableBody.length; j++){
            const currName = scheduleTableBody[j].children[1].innerHTML;
            if (currName === devA || currName === devB){
                scheduleTableBody[j].children[i+2].setAttribute('class', 'bg-success');
            }
        }

        const absentDev = unavailableDevs.filter(x => x.dateFrom === dateArray[i])
            .map(x => x.userID);

        absentDev.forEach(function (x) {
            for (let j = 0; j < scheduleTableBody.length; j++){
                const currName = scheduleTableBody[j].children[1].innerHTML;
                if (currName === x){
                    scheduleTableBody[j].children[i+2].setAttribute('class', 'bg-danger');
                }
            }
        });
    }
</script>

<?php require("templates/footer.phtml"); ?>
